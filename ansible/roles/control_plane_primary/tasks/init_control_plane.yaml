---
- name: Check if control plane is initialized
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: kubeadm_init

- name: Copy 'kubeadm-config.yaml'
  when: not kubeadm_init.stat.exists
  become: true
  become_user: root
  ansible.builtin.copy:
    src: ../../../../kubeadm-config.yaml
    dest: ~/kubeadm-config.yaml
    mode: '644'

- name: Initialize control plane
  when: not kubeadm_init.stat.exists
  become: true
  become_user: root
  ansible.builtin.command: kubeadm init --config ~/kubeadm-config.yaml

- name: Create '.kube' directory
  ansible.builtin.file:
    path: ~/.kube
    state: directory
    owner: '{{ USER }}'
    mode: '755'

- name: Copy 'admin.conf' to '~/.kube/config'
  become: true
  become_user: root
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ USER }}/.kube/config
    owner: '{{ USER }}'
    mode: '600'
    remote_src: true

- name: Get join command
  ansible.builtin.shell: kubeadm token create --print-join-command > /tmp/join_command.sh

- name: Fetch join command
  ansible.builtin.fetch:
    src: /tmp/join_command.sh
    dest: /tmp/join_command.sh
    flat: true

- name: Fetch PKI certificates
  become: true
  become_user: root
  ansible.builtin.fetch:
    src: /etc/kubernetes/pki/{{ item }}
    dest: /tmp/kubernetes/pki/{{ item }}
    flat: true
  with_items:
    - ca.crt
    - ca.key
    - etcd/ca.crt
    - etcd/ca.key
    - sa.key
    - sa.pub

# - name: Fetch 'admin.conf'
#   become: true
#   become_user: root
#   ansible.builtin.fetch:
#     src: /etc/kubernetes/{{ item }}
#     dest: /tmp/kubernetes/{{ item }}
#     flat: true
#   with_items:
#     - admin.conf
