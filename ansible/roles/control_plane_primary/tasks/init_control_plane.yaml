---
- name: Check if control-plane is initialized
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: kubeadm_init

- name: Copy kubeadm-config.yaml
  when: kubeadm_init.stat.exists == false
  ansible.builtin.copy:
    src: ../../../../kubeadm-config.yaml
    dest: ~/kubeadm-config.yaml
    mode: '644'

- name: Initialize the control-plane
  when: kubeadm_init.stat.exists == false
  ansible.builtin.command: kubeadm init --config ~/kubeadm-config.yaml --upload-certs

- name: Copy admin.conf
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: .kube/config
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: '755'
    remote_src: true

- name: "Fetching Kubernetes Master PKI files from primary master"
  ansible.builtin.fetch:
    src: /etc/kubernetes/pki/{{item}}
    dest: /tmp/kubeadm-ha/pki/{{item}}
    flat: true
  with_items:
    - ca.crt
    - ca.key
    - sa.key
    - sa.pub
    - front-proxy-ca.crt
    - front-proxy-ca.key

- name: "Fetching Kubernetes Master ETCD files from primary master"
  ansible.builtin.fetch:
    src: /etc/kubernetes/pki/etcd/{{ item }}
    dest: /tmp/kubeadm-ha/pki/etcd/{{ item }}
    flat: true
  with_items:
    - ca.crt
    - ca.key

- name: "Fetching Kubernetes Master Admin files from primary master"
  ansible.builtin.fetch:
    src: /etc/kubernetes/{{ item }}
    dest: /tmp/kubeadm-ha/{{ item }}
    flat: true
  with_items:
    - admin.conf
    