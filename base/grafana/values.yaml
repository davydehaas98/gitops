sidecar:
  dashboards:
    enabled: true

datasources:
  datasource.yaml:
    apiVersion: 1
    datasources:
      # - name: Loki
      #   type: loki
      #   access: proxy
      #   uid: loki
      #   url: http://loki-gateway.loki.svc.cluster.local
      #   editable: false
      - name: Prometheus
        type: prometheus
        uid: prometheus
        url: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090/
        access: proxy
        isDefault: true
        jsonData:
          httpMethod: POST
          timeInterval: 30s
      # - name: Alertmanager
      #   type: alertmanager
      #   uid: alertmanager
      #   url: http://prometheus-kube-prometheus-alertmanager.prometheus.svc.cluster.local:9093/
      #   access: proxy
      #   jsonData:
      #     handleGrafanaManagedAlerts: false
      #     implementation: prometheus

replicas: 1

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns
    external-dns.alpha.kubernetes.io/hostname: grafana.cloud.davydehaas.dev
    external-dns.alpha.kubernetes.io/ttl: "120"
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
  path: /
  hosts:
    - grafana.cloud.davydehaas.dev
  tls:
    - hosts:
        - grafana.cloud.davydehaas.dev
      secretName: "grafana-tls"

grafana.ini:
  paths:
    data: /var/lib/grafana
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
  server:
    domain: "https://grafana.cloud.davydehaas.dev"
    root_url: "https://grafana.cloud.davydehaas.dev"

serviceMonitor:
  enabled: true

resources:
  limits:
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

persistence:
  type: StatefulSet
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 16Gi

# admin:
#   existingSecret: "grafana-credentials"
#   userKey: admin-user
#   passwordKey: admin-password
