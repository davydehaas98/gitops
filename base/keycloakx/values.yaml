command:
  - "/opt/keycloak/bin/kc.sh"
  - "start"
  - "--http-enabled=true"
  - "--http-port=8080"
  - "--hostname-strict=false"
  - "--hostname-strict-https=false"

extraEnv: |
  - name: KEYCLOAK_STATISTICS
    value: all
  - name: JAVA_OPTS_APPEND
    value: >-
      -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless
  - name: KEYCLOAK_ADMIN
    valueFrom:
      secretKeyRef:
        name: 'keycloakx-credentials'
        key: keycloak-admin
  - name: KEYCLOAK_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: 'keycloakx-credentials'
        key: keycloak-admin-password

dbchecker:
  enabled: true
  securityContext:
    allowPrivilegeEscalation: false
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  resources:
    requests:
      cpu: 20m
      memory: 32Mi
    limits:
      memory: 32Mi

database:
  existingSecret: "keycloakx-credentials"
  vendor: postgres
  hostname: postgresql.postgresql.svc.cluster.local
  port: 5432
  username: keycloak
  database: keycloak

replicas: 1

resources:
  limits:
    memory: 1024Mi
  requests:
    cpu: 50m
    memory: 256Mi

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    external-dns.alpha.kubernetes.io/hostname: auth.cloud.davydehaas.dev,keycloak.cloud.davydehaas.dev
    external-dns.alpha.kubernetes.io/ttl: "120"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
  rules:
    - host: auth.cloud.davydehaas.dev
      paths:
        - path: '/'
          pathType: Prefix
    - host: keycloak.cloud.davydehaas.dev
      paths:
        - path: '/'
          pathType: Prefix
  tls:
    - secretName: auth-tls
      hosts:
        - auth.cloud.davydehaas.dev
    - secretName: keycloak-tls
      hosts:
        - keycloak.cloud.davydehaas.dev

health:
  enabled: true

http:
  relativePath: '/'

metrics:
  enabled: true
